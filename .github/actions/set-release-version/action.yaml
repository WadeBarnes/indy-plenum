name: "Set Release Versions"
description: "Sets the version and makes the release and package version available to other steps."

inputs:
  moduleName: 
    description: "The name of the module containing the version management APIs for the project; i.e. load_version and set_version"
    required: true
    default: "plenum"
  isDev: 
    description: "A flag indicating whether or not this is a dev build."
    required: true
    default: false
  isRC: 
    description: "A flag indicating whether or not this is a release candidate build."
    required: true
    default: false

# outputs:
#   targetReleaseVer:
#     description: "The target release version."
#   upstreamVer:
#     description: "The version number to use with Python packages."
#   pkgVer:
#     description: "The version number to use with Debian packages."

runs:
  using: "composite"
  steps:
    - name: Set Versions
      shell: bash
      run: |
        fullVersion=$(python3 -c "from ${{ inputs.moduleName }} import load_version; print(load_version().full)")
        release=$(python3 -c "from ${{ inputs.moduleName }} import load_version; print(load_version().release)")
        pre=$(python3 -c "from ${{ inputs.moduleName }} import load_version; pre = load_version().parts[-2]; print('' if pre is None else pre)")
        revision=$(python3 -c "from ${{ inputs.moduleName }} import load_version; rev = load_version().parts[-1]; print('' if rev is None else rev)")

        targetReleaseVer=${release}
        upstreamVer=${targetReleaseVer}
        pkgVer=${upstreamVer}

        if [ ${{ inputs.isDev }} == "true" ] || [ ${{ inputs.isRC }} == "true" ]; then
          if [ ${{ inputs.isDev }} == "true" ]; then
            rev=${{ github.run_number }}
          else
            rev=${revision}
          fi

          upstreamVer+=".${pre}${rev}"
          pkgVer+="~${pre}${rev}"
        fi

        # Set Outputs ...
        echo "::set-output name=targetReleaseVer::$(echo ${targetReleaseVer})"
        echo "::set-output name=upstreamVer::$(echo ${upstreamVer})"
        echo "::set-output name=pkgVer::$(echo ${pkgVer})"

        echo "Target Release version is : ${targetReleaseVer}"
        echo "PyPI Release version is : ${upstreamVer}"
        echo "Debian Release version is : ${pkgVer}"